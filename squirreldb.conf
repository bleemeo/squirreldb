# SquirrelDB configuration files are written in yaml.

# All configuration can be overriden by environment variables. The environment variable is
# * Prefixed by SQUIRRELDB_
# * All letters converted to uppercase
# * Each yaml indentation is converted to an "_"
#
# For example, cassandra.addresses becomes:
# SQUIRRELDB_CASSANDRA_ADDRESSES=localhost:9042

# Prometheus API listen address, used for remote storage and PromQL requests.
# A Prometheus exporter (of SquirrelDB internal metrics) will be exported on /metrics.
# 
# listen_address: "localhost:9201"

# SquirrelDB use Prometheus remote storage to read/write points from/into SquirrelDB,
# the endpoints are at /api/v1/read and /api/v1/write.
# https://prometheus.io/docs/prometheus/latest/storage/#remote-storage-integrations
#
# remote_storage:
#
#   # Maximum number of concurrent remote read and write calls. If set to N, allows 2*N concurrent requests, 
#   # with N reads and N writes. If set to 0, defaults to 2 * number of CPUs.
#   max_concurrent_requests: 0


# SquirrelDB exports a PromQL endpoint at /api/v1/query and /api/v1/query_range.
#
# promql:
#
#  # Maximum number of points one PromQL may evaluate. Once reached, it will abort the query.
#  # 0 means no limit.
#  max_evaluated_points: 0
#
#  # Maximum number of series one PromQL may evaluate. Once reached, it will abort the query.
#  # 0 means no limit.
#  max_evaluated_series: 0


# SquirrelDB uses Cassandra to store points.
#
# cassandra:
#
#   # List of Cassandra servers to connect to, by default localhost:9042 is used. You may provide
#   # a list of servers if using a cluster.
#   addresses:
#   - "cassandra1:9042"
#   - "cassandra2:9042"
#
#   # Name of the Cassandra Keyspace.
#   keyspace: "squirreldb"
#
#   # Replication factor. This must be one for a single server Cassandra.
#   # It should be 3 when your Cassandra cluster contains at least 3 servers.
#   # Note: this value is only used when creating the keyspace.
#   replication_factor: 1
#
#   # Metric points are automatically deleted after this delay in seconds.
#   # Note: the expiration is set when points is written, changing this value
#   # will only impact points written *after* the change.
#   default_time_to_live: 8760h  # one year
#
#   # To improve query of large period of time, SquirrelDB do some
#   # pre-aggregation of data.
#   aggregate:
#
#     # To avoid overloading the system, SquirrelDB allows to throttle the aggregation.
#     # This setting configures the target time for aggregating one unit of work (1 days
#     # by default, see size settings).
#     # The aggregation will take at least this amount of time, if well configured exactly this time.
#     # If the aggregation is too slow, it will take more than this duration, but then the
#     # aggregation will run at full speed.
#     intended_duration: 10m

# For performance reasons, SquirrelDB does not write points immediately in Cassandra.
# SquirrelDB receive points by timestamp, usually multiple metrics for the same timestamp.
# But in Cassandra, it write points by metrics. One batch of points for the same metrics and multiple timestamp.
# To perform this conversion, SquirrelDB needs to store pending points in memory and
# write them to Cassandra periodically.
#
# batch:
#
#   # Configure the time (in second) to keep points in memory before writing to Cassandra
#   # Note: this value must be the same between all SquirrelDB.
#   # Smaller value means:
#   # * less memory usage,
#   # * fewer points in memory (less data loss in case of crash)
#   # * less performance
#   # * more disk usage
#   size: 15m

# The default memory store for batch of points is the SquirrelDB process memory.
# You could store them in Redis
# redis:
#
#  # If the address is unset, Redis is not used. If set to a single address
#  # (e.g. ["localhost:6379"]) then Redis will be used, as a Redis cluster if
#  # possible or a simple single-node Redis. If set to more than one address,
#  # Redis cluster is used.
#  addresses: []

# For debugging, you may lower the log level. Only the messages that have
# a greater or equal level than the chosen one are shown.
# The supported levels are -1 (trace), 0 (debug), 1 (info), 2 (warn), 3 (error)
# log:
#  level: 1
#  disabled_color: false

# Errors and panics are sent to Sentry if the DSN is configured.
# sentry:
#   dsn: my-sentry-dsn
