# SquirrelDB configuration files are written in yaml.


# SquirrelDB use Cassandra to store points.
# By default localhost:9042 is used. You may provide a list of Cassandra server if using a cluster.
# cassandra:
#   addresses:
#   - "cassanra1:9042"
#   - "cassanra2:9042"
# All configuration could be overriden by environment variable. The environment varible is
# * Prefixed by SQUIRRELDB_
# * All letters converted to uppercase
# * Each yaml indentation is converted to an "_"
#
# For example, cassandra.addresses because:
# SQUIRRELDB_CASSANDRA_ADDRESSES=localhost:9042

# SquirrelDB use Prometheus remote storage to read/write points from/into SquirrelDB.
# https://prometheus.io/docs/prometheus/latest/storage/#remote-storage-integrations
#
# remote_storage:
#
#  # HTTP address to listen for remote storage requests.
#  # The write path will be http://localhost:9201/write
#  # The read path will be http://localhost:9201/read
#  # A Prometheus exporter (of SquirrelDB internal metrics) will be http://localhost:9201/metrics
#  listen_address: "localhost:9201"


# SquirrelDB export a PromQL endpoint at /api/v1/query and /api/v1/query_range.
# The HTTP port used is the same as the remote_storage.
#
# promql:
#
#  # Maximum number of points one PromQL may evaluate. Once reached, it will abort the query.
#  # 0 means no limit.
#  max_evaluated_points: 0
#
#  # Maximum number of series one PromQL may evaluate. Once reached, it will abort the query.
#  # 0 means no limit.
#  max_evaluated_series: 0


# cassandra:
#
#   # List of Cassandra server to connect to
#   addresses: ["localhost:9042"]
#
#   # Name of the Cassandra Keyspace
#   keyspace: "squirreldb"
#
#   # Replication factor. This must be one for a single server Cassandra.
#   # It should be 3 when your Cassandra cluster contains at least 3 servers.
#   # Note: this value is only used when creating the keyspace.
#   replication_factor: 1
#
#   # Metric points are automatically deleted after this delay in seconds.
#   # Note: the expiration is set when points is written, changing this value
#   # will only impact points written *after* the change.
#   default_time_to_live: 8760h  # one year
#
#   # To improve query of large period of time, SquirrelDB do some
#   # pre-aggregation of data.
#   # Note: this value can't be changed after first start. Default should be fine
#   # for most usage.
#   aggregate:
#     # Each aggregated points will cover 300 seconds of time
#     resolution: 5m
#
#     # SquirrelDB will compute aggegated data for 1 days of data. This means
#     # SquirrelDB will do aggregation every day and if their is some backlog
#     # it will process day by day.
#     size: 24h
#
#     # To avoid overloading the system, SquirrelDB allow to throttle the aggregation.
#     # This settings configure the target time for aggregating one unit of work (1 days
#     # by default, see size settings).
#     # The aggregation will took at least this amount of time, if well configured exactly this time.
#     # If the aggregation is too slow, it will took more than this duration, but then the
#     # aggregation will run at full speed.
#     intended_duration: 10m
#
#   # For performance reason, points from one metric need to be stored in multiple
#   # Cassandra partition. SquirrelDB split points based on their timestamp.
#   # Note: this value can't be changed after first start. Default should be fine
#   # for most usage.
#   partition_size:
#     raw: 120h        # 5 days
#     aggregate: 1920h # 80 days

# For performance reason, SquirrelDB does not write points immediately in Cassandra.
# SquirrelDB receive points by timestamp, usually multiple metrics for the same timestamp.
# But in Cassandra, it write points by metrics. One batch of points for the same metrics and multiple timestamp.
# To perform this convertion, SquirrelDB need to store pending points in memory and
# write them to Cassandra periodically.
#
# batch:
#
#   # Configure the time (in second) keep in memory before writing points to Cassandra
#   # Note: this value can't be changed after first start.
#   # Smaller value means:
#   # * less memory usage,
#   # * fewer points in memory (less data loss in case of crash)
#   # * less performance
#   # * more disk usage
#   size: 15m

# The default memory store for batch of points is the SquirrelDB process memory.
# You could store them in Redis
# redis:
#
#  # If the addresses is unset, Redis is not used. If set to a single address
#  # (e.g. ["localhost:6379"]) then Redis will be used, as a Redis cluster if
#  # possible or a simple single-node Redis. If set to more than one addresses,
#  # Redis cluster is used.
#  addresses: []

# For debuging, you may increase the log level.
# The higher this value is, the more message are shown. Currently the max is 2.
# log:
#  level: 0
